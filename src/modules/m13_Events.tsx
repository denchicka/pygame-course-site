import React from 'react'
import Section from '../components/Section'
import CodeBlock from '../components/CodeBlock'

export default function Module() {
  return (
    <div className="space-y-6">
      <Section title="–ó–∞–¥–∞—á–∞ –º–æ–¥—É–ª—è">
        <p>
          –ü–æ–Ω—è—Ç—å –æ—á–µ—Ä–µ–¥—å —Å–æ–±—ã—Ç–∏–π <code>pygame.event</code> –∏ –Ω–∞—É—á–∏—Ç—å—Å—è —Ä–∞–±–æ—Ç–∞—Ç—å —Å –∫–ª–∞–≤–∏–∞—Ç—É—Ä–æ–π, –º—ã—à—å—é, –∫–æ–ª—ë—Å–∏–∫–æ–º,
          —Ç–∞–π–º–µ—Ä–∞–º–∏ (<code>set_timer</code>) –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–º–∏ —Å–æ–±—ã—Ç–∏—è–º–∏ (<code>USEREVENT</code>), –∞ —Ç–∞–∫–∂–µ —É–≤–∏–¥–µ—Ç—å —Ä–∞–∑–Ω–∏—Ü—É
          –º–µ–∂–¥—É –æ–±—Ä–∞–±–æ—Ç–∫–æ–π <em>—Å–æ–±—ã—Ç–∏–π</em> –∏ –æ–ø—Ä–æ—Å–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–π (<code>key.get_pressed()</code>).
        </p>
      </Section>

      <Section title="–û—á–µ—Ä–µ–¥—å —Å–æ–±—ã—Ç–∏–π: –±–∞–∑–æ–≤—ã–π —Ü–∏–∫–ª">
        <CodeBlock language="python">{`for event in pygame.event.get():
    if event.type == pygame.QUIT:
        is_running = False
    if event.type == pygame.KEYDOWN and event.key == pygame.K_ESCAPE:
        is_running = False`}</CodeBlock>
        <p className="text-sm text-gray-500">
          –°–æ–±—ã—Ç–∏—è –ø—Ä–∏—Ö–æ–¥—è—Ç –≤ –æ—á–µ—Ä–µ–¥—å; –µ—Å–ª–∏ –∏—Ö –Ω–µ –∏–∑–≤–ª–µ–∫–∞—Ç—å, –æ–∫–Ω–æ ¬´–∑–∞–≤–∏—Å–∞–µ—Ç¬ª. –î–ª—è –ø–æ—Å—Ç–æ—è–Ω–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π (–±–µ–≥, –¥–≤–∏–∂–µ–Ω–∏–µ) —É–¥–æ–±–Ω–µ–µ
          –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ –æ–ø—Ä–∞—à–∏–≤–∞—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–ª–∞–≤–∏—à: <code>keys = pygame.key.get_pressed()</code>.
        </p>
      </Section>

      <Section title="–ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞: —Ä–∞–∑–æ–≤—ã–µ vs —É–¥–µ—Ä–∂–∞–Ω–∏–µ">
        <CodeBlock language="python">{`# –†–∞–∑–æ–≤–æ–µ: KEYDOWN/KEYUP
if event.type == pygame.KEYDOWN and event.key == pygame.K_SPACE:
    print('jump!')

# –£–¥–µ—Ä–∂–∞–Ω–∏–µ: get_pressed (–∫–∞–∂–¥—ã–π –∫–∞–¥—Ä)
keys = pygame.key.get_pressed()
dx = (keys[pygame.K_RIGHT] - keys[pygame.K_LEFT]) * speed * dt
dy = (keys[pygame.K_DOWN] - keys[pygame.K_UP]) * speed * dt
rect.move_ip(dx, dy)`}</CodeBlock>
      </Section>

      <Section title="–ú—ã—à—å: –∫–ª–∏–∫–∏, –¥–≤–∏–∂–µ–Ω–∏–µ, –∫–æ–ª–µ—Å–æ">
        <CodeBlock language="python">{`if event.type == pygame.MOUSEBUTTONDOWN and event.button == 1:
    print('–õ–ö–ú –≤–Ω–∏–∑', event.pos)
if event.type == pygame.MOUSEBUTTONUP and event.button == 1:
    print('–õ–ö–ú –≤–≤–µ—Ä—Ö', event.pos)
if event.type == pygame.MOUSEMOTION:
    print('–¥–≤–∏–∂–µ–Ω–∏–µ', event.pos, event.rel, event.buttons)
if event.type == pygame.MOUSEWHEEL:
    print('–∫–æ–ª–µ—Å–æ', event.x, event.y)`}</CodeBlock>
        <p className="text-sm text-gray-500">
          <code>MOUSEWHEEL.y</code> –ø–æ–ª–æ–∂–∏—Ç–µ–ª–µ–Ω –ø—Ä–∏ –ø—Ä–æ–∫—Ä—É—Ç–∫–µ ¬´–∫ —Å–µ–±–µ¬ª (–≤–≤–µ—Ä—Ö) –∏ –æ—Ç—Ä–∏—Ü–∞—Ç–µ–ª–µ–Ω ¬´–æ—Ç —Å–µ–±—è¬ª (–≤–Ω–∏–∑).
        </p>
      </Section>

      <Section title="–¢–∞–π–º–µ—Ä—ã –∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏–µ —Å–æ–±—ã—Ç–∏—è">
        <CodeBlock language="python">{`USEREVENT_SPAWN = pygame.USEREVENT + 1
USEREVENT_FIRE  = pygame.USEREVENT + 2

pygame.time.set_timer(USEREVENT_SPAWN, 1000)  # —Ä–∞–∑ –≤ 1000 –º—Å
pygame.event.post(pygame.event.Event(USEREVENT_FIRE, {'power': 10}))  # –ø–æ—Å—Ç–∏–º —Å–≤–æ—ë —Å–æ–±—ã—Ç–∏–µ

if event.type == USEREVENT_SPAWN:
    print('spawn tick!')
if event.type == USEREVENT_FIRE:
    print('FIRE with power', event.power)`}</CodeBlock>
      </Section>

      <Section title="–°–æ–±—Ä–∞–Ω–Ω—ã–π –ø—Ä–∏–º–µ—Ä: –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞, –º—ã—à—å, –∫–æ–ª–µ—Å–æ, —Ç–∞–π–º–µ—Ä –∏ —Å–≤–æ–∏ —Å–æ–±—ã—Ç–∏—è">
        <CodeBlock language="python">{`import pygame, sys, random
pygame.init()

W, H = 900, 600
screen = pygame.display.set_mode((W, H))
pygame.display.set_caption('–°–æ–±—ã—Ç–∏—è ‚Äî —Å–±–æ—Ä–∫–∞')
clock = pygame.time.Clock()
font = pygame.font.SysFont(None, 20)

drag_rect = pygame.Rect(0, 0, 160, 100)
drag_rect.center = (W//2, H//2)
dragging = False
drag_offset = pygame.Vector2(0, 0)
border_thickness = 4

USEREVENT_FIRE  = pygame.USEREVENT + 1
USEREVENT_SPAWN = pygame.USEREVENT + 2
USEREVENT_BLINK = pygame.USEREVENT + 3
pygame.time.set_timer(USEREVENT_BLINK, 500)   # –º–∏–≥–∞–Ω–∏–µ —Ä–∞–º–∫–∏

logs = []
def log(msg):
    logs.append(msg)
    if len(logs) > 8: logs.pop(0)

spawn_enabled = False
def toggle_spawn():
    global spawn_enabled
    spawn_enabled = not spawn_enabled
    pygame.time.set_timer(USEREVENT_SPAWN, 1000 if spawn_enabled else 0)
    log(f'SPAWN: {"ON" if spawn_enabled else "OFF"}')

is_running = True
blink = False
while is_running:
    dt = clock.tick(60) / 1000.0

    keys = pygame.key.get_pressed()
    v = pygame.Vector2((1 if keys[pygame.K_RIGHT] else 0)-(1 if keys[pygame.K_LEFT] else 0),
                       (1 if keys[pygame.K_DOWN] else 0)-(1 if keys[pygame.K_UP] else 0))
    if v.length_squared() > 0:
        v = v.normalize()
        drag_rect.move_ip(v.x*240*dt, v.y*240*dt)
        drag_rect.clamp_ip(screen.get_rect())

    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            is_running = False
        if event.type == pygame.KEYDOWN:
            if event.key == pygame.K_ESCAPE: is_running = False
            elif event.key == pygame.K_SPACE:
                pygame.event.post(pygame.event.Event(USEREVENT_FIRE, {'power': random.randint(5,15)}))
                log('post FIRE')
            elif event.key == pygame.K_t:
                toggle_spawn()

        if event.type == pygame.MOUSEBUTTONDOWN and event.button == 1 and drag_rect.collidepoint(event.pos):
            dragging = True; drag_offset = pygame.Vector2(event.pos) - pygame.Vector2(drag_rect.center); log('drag start')
        elif event.type == pygame.MOUSEBUTTONUP and event.button == 1:
            if dragging: log('drag end'); dragging = False
        elif event.type == pygame.MOUSEMOTION and dragging:
            drag_rect.center = (event.pos[0] - drag_offset.x, event.pos[1] - drag_offset.y)

        if event.type == pygame.MOUSEWHEEL:
            border_thickness = max(1, min(12, border_thickness + event.y))
            log(f'wheel {event.y}: thickness={border_thickness}')

        if event.type == USEREVENT_SPAWN: log('SPAWN tick')
        if event.type == USEREVENT_BLINK: blink = not blink
        if event.type == USEREVENT_FIRE:  log(f'FIRE power={getattr(event,"power","?")}')

    screen.fill((24,26,32))
    pygame.draw.rect(screen, (70,120,210), drag_rect, 0, border_radius=12)
    pygame.draw.rect(screen, (220,230,255) if not blink else (255,120,120), drag_rect, border_thickness, border_radius=12)

    tips = ['ESC ‚Äî –≤—ã—Ö–æ–¥ | T ‚Äî —Ç–∞–π–º–µ—Ä SPAWN | SPACE ‚Äî post FIRE',
            '–ö–æ–ª–µ—Å–æ ‚Äî —Ç–æ–ª—â–∏–Ω–∞ —Ä–∞–º–∫–∏ | –°—Ç—Ä–µ–ª–∫–∏ ‚Äî —Å–¥–≤–∏–≥ | –õ–ö–ú ‚Äî –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏–µ']
    for i, msg in enumerate(tips + logs[-8:]):
        screen.blit(font.render(msg, True, (235,235,240)), (10, 10 + i*20))

    pygame.display.flip()

pygame.quit(); sys.exit()`}</CodeBlock>
      </Section>

      <Section title="–ü—Ä–∞–∫—Ç–∏–∫–∞ ‚Äî –∑–∞–¥–∞–Ω–∏—è">
        <ol className="space-y-2">
          <li><strong>–û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ —á–∞—Å—Ç–æ—Ç—ã —Å–æ–±—ã—Ç–∏–π:</strong> –≤—ã–∫–ª—é—á–∞—Ç—å SPAWN —á–µ—Ä–µ–∑ 5 —Å –ø–æ—Å–ª–µ –≤–∫–ª—é—á–µ–Ω–∏—è (—Ç–∞–π–º–µ—Ä ¬´–æ–¥–Ω–∏–º —Ä–∞–∑–æ–º¬ª).</li>
          <li><strong>–î–≤–æ–π–Ω–æ–π –∫–ª–∏–∫:</strong> –∑–∞—Ñ–∏–∫—Å–∏—Ä—É–π –≤—Ä–µ–º—è –ø–æ—Å–ª–µ–¥–Ω–µ–≥–æ –∫–ª–∏–∫–∞ –∏ –æ–ø—Ä–µ–¥–µ–ª–∏ ¬´double click¬ª (–∏–Ω—Ç–µ—Ä–≤–∞–ª &lt; 250 –º—Å).</li>
          <li><strong>–ì–æ—Ä—è—á–∏–µ –∫–ª–∞–≤–∏—à–∏:</strong> –¥–æ–±–∞–≤—å <kbd>Ctrl</kbd>+<kbd>S</kbd> (—Å–æ—Ö—Ä–∞–Ω–∏—Ç—å) –∏ <kbd>Ctrl</kbd>+<kbd>Q</kbd> (–≤—ã–π—Ç–∏).</li>
          <li><strong>–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–±—ã—Ç–∏–µ:</strong> —Å–¥–µ–ª–∞–π <code>USEREVENT_SCORE</code> –∏ –ø–æ—Å—Ç—å –µ–≥–æ –∫–∞–∂–¥—ã–µ N –æ—á–∫–æ–≤.</li>
          <li><strong>–§–∏–ª—å—Ç—Ä–∞—Ü–∏—è:</strong> —Ä–∞–∑—Ä–µ—à–∏—Ç—å —Ç–æ–ª—å–∫–æ –Ω—É–∂–Ω—ã–µ —Ç–∏–ø—ã: <code>pygame.event.set_allowed([...])</code>.</li>
        </ol>
      </Section>

      <Section title="–ü–æ–¥—Å–∫–∞–∑–∫–∏ (—Ñ—Ä–∞–≥–º–µ–Ω—Ç—ã)">
        <CodeBlock language="python">{`# –¢–∞–π–º–µ—Ä –æ–¥–∏–Ω —Ä–∞–∑
ONCE = pygame.USEREVENT + 10
pygame.time.set_timer(ONCE, 5000, loops=1)`}</CodeBlock>
        <CodeBlock language="python">{`# Ctrl+S / Ctrl+Q
mods = pygame.key.get_mods()
if event.type == pygame.KEYDOWN and (mods & pygame.KMOD_CTRL):
    if event.key == pygame.K_s: print('save')
    if event.key == pygame.K_q: is_running = False`}</CodeBlock>
        <CodeBlock language="python">{`# set_allowed ‚Äî –ø—Ä–æ–ø—É—Å–∫–∞–µ–º —Ç–æ–ª—å–∫–æ –Ω—É–∂–Ω—ã–µ —Ç–∏–ø—ã
pygame.event.set_allowed([pygame.QUIT, pygame.KEYDOWN, pygame.KEYUP, pygame.MOUSEBUTTONDOWN, pygame.MOUSEBUTTONUP, pygame.MOUSEMOTION, pygame.MOUSEWHEEL])`}</CodeBlock>
      </Section>

      <Section title="–ß–∞—Å—Ç—ã–µ –æ—à–∏–±–∫–∏">
        <ul>
          <li>–ù–µ –∏–∑–≤–ª–µ–∫–∞—Ç—å —Å–æ–±—ã—Ç–∏—è ‚Äî –æ–∫–Ω–æ –Ω–µ –æ—Ç–∫–ª–∏–∫–∞–µ—Ç—Å—è (–∑–∞–≤–∏—Å–∞–µ—Ç).</li>
          <li>–î–µ–ª–∞—Ç—å ¬´–±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–µ¬ª –¥–µ–π—Å—Ç–≤–∏—è —á–µ—Ä–µ–∑ KEYDOWN –≤–º–µ—Å—Ç–æ <code>get_pressed()</code>.</li>
          <li>–ó–∞–±—ã–≤–∞—Ç—å –ø—Ä–æ <code>clamp_ip</code> ‚Äî –æ–±—ä–µ–∫—Ç —É–µ–∑–∂–∞–µ—Ç –∑–∞ –ø—Ä–µ–¥–µ–ª—ã —ç–∫—Ä–∞–Ω–∞ –ø—Ä–∏ –ø–µ—Ä–µ—Ç–∞—Å–∫–∏–≤–∞–Ω–∏–∏.</li>
          <li>–ü–æ—Å—Ç–∏—Ç—å <code>Event</code> –±–µ–∑ –¥–∞–Ω–Ω—ã—Ö –∏ –ø—ã—Ç–∞—Ç—å—Å—è —á–∏—Ç–∞—Ç—å –∞—Ç—Ä–∏–±—É—Ç—ã ‚Äî –ø—Ä–æ–≤–µ—Ä—è–π —á–µ—Ä–µ–∑ <code>getattr</code>.</li>
        </ul>
      </Section>

      <Section title="–°–∫–∞—á–∞—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª—ã">
        <ul>
          <li>üì¶ –ó–∞–≥–æ—Ç–æ–≤–∫–∞ (starter): <a href="https://denchicka.github.io/pygame-course-site/downloads/starter/m13.zip">m13.zip</a></li>
          <li>üì¶ –ò—Ç–æ–≥ (final): <a href="https://denchicka.github.io/pygame-course-site/downloads/final/m13.zip">m13.zip</a></li>
        </ul>
      </Section>
    </div>
  )
}
