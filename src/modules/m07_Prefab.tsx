import React from 'react'
import Section from '../components/Section'
import CodeBlock from '../components/CodeBlock'

export default function Module() {
  return (
    <div className="space-y-6">
      <Section title="–ó–∞–¥–∞—á–∞ –º–æ–¥—É–ª—è">
        <p>
          –°–æ–±–∏—Ä–∞—Ç—å —Å–ª–æ–∂–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã –∏–∑ –ø—Ä–æ—Å—Ç—ã—Ö —Ñ–∏–≥—É—Ä (<code>pygame.draw</code>), –≤—ã–Ω–æ—Å–∏—Ç—å –ø–æ–≤—Ç–æ—Ä—è—é—â–∏–π—Å—è –∫–æ–¥
          –≤ —Ñ—É–Ω–∫—Ü–∏–∏ –∏ –∫–ª–∞—Å—Å—ã, —Å–æ–±–ª—é–¥–∞—Ç—å –ø–æ—Ä—è–¥–æ–∫ —Ä–∏—Å–æ–≤–∞–Ω–∏—è (—Å–ª–æ–∏).
        </p>
      </Section>

      <Section title="–ò–¥–µ—è –ø—Ä–µ—Ñ–∞–±–æ–≤ (prefab)">
        <ul>
          <li><strong>–§—É–Ω–∫—Ü–∏–∏</strong> –¥–ª—è —Å—Ç–∞—Ç–∏—á–Ω—ã—Ö –æ–±—ä–µ–∫—Ç–æ–≤: <code>draw_house(surface, pos, scale)</code>, <code>draw_tree(...)</code>.</li>
          <li><strong>–ö–ª–∞—Å—Å—ã</strong> –¥–ª—è –¥–∏–Ω–∞–º–∏–∫–∏: <code>Car.update(dt)</code>, <code>Car.draw(surface)</code>.</li>
          <li><strong>–°–ª–æ–∏</strong>: —Ñ–æ–Ω ‚Üí —Å—Ç–∞—Ç–∏–∫–∞ ‚Üí –¥–∏–Ω–∞–º–∏–∫–∞ ‚Üí –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å (—Ç–µ–∫—Å—Ç/–ø–æ–¥—Å–∫–∞–∑–∫–∏).</li>
        </ul>
      </Section>

      <Section title="–î–æ–º –∏–∑ —Ñ–∏–≥—É—Ä (—Ñ—É–Ω–∫—Ü–∏—è)">
        <CodeBlock language="python">{`def draw_house(surface: pygame.Surface, pos: tuple[int, int], scale: float = 1.0) -> None:
    x, y = pos
    w, h = int(120*scale), int(80*scale)
    base = pygame.Rect(x, y, w, h)
    roof = [(x, y), (x + w//2, y - int(50*scale)), (x + w, y)]
    door_w, door_h = int(24*scale), int(38*scale)
    door = pygame.Rect(x + w//2 - door_w//2, y + h - door_h, door_w, door_h)
    win = pygame.Rect(x + int(12*scale), y + int(16*scale), int(26*scale), int(22*scale))

    pygame.draw.rect(surface, (204, 163, 122), base, 0)
    pygame.draw.polygon(surface, (160, 80, 60), roof, 0)
    pygame.draw.rect(surface, (90, 60, 40), door, 0, border_radius=4)
    pygame.draw.rect(surface, (200, 220, 255), win, 0, border_radius=4)
    pygame.draw.line(surface, (150, 190, 230), (win.centerx, win.top), (win.centerx, win.bottom), 2)
    pygame.draw.line(surface, (150, 190, 230), (win.left, win.centery), (win.right, win.centery), 2)`}</CodeBlock>
      </Section>

      <Section title="–î–µ—Ä–µ–≤–æ –∏ –ø–µ—Ä—Å–æ–Ω–∞–∂ (—Ñ—É–Ω–∫—Ü–∏–∏)">
        <CodeBlock language="python">{`def draw_tree(surface: pygame.Surface, pos: tuple[int, int], scale: float = 1.0) -> None:
    x, y = pos
    trunk = pygame.Rect(x, y, int(22*scale), int(64*scale))
    pygame.draw.rect(surface, (110, 70, 40), trunk, 0, border_radius=4)
    cx = x + trunk.w//2
    cy = y - int(18*scale)
    for r, col in [(int(28*scale), (40,140,80)), (int(22*scale), (46,160,96)), (int(18*scale), (54,180,108))]:
        pygame.draw.circle(surface, col, (cx, cy), r, 0)
        cy -= int(18*scale)

def draw_person(surface: pygame.Surface, pos: tuple[int, int], scale: float = 1.0) -> None:
    x, y = pos
    head_r = int(10*scale)
    pygame.draw.circle(surface, (255, 210, 150), (x, y), head_r, 0)  # –≥–æ–ª–æ–≤–∞
    body = pygame.Rect(x - int(6*scale), y + head_r, int(12*scale), int(28*scale))
    pygame.draw.rect(surface, (80, 120, 220), body, 0, border_radius=4)
    pygame.draw.line(surface, (80,120,220), (body.left- int(10*scale), body.top+8), (body.right+ int(10*scale), body.top+8), 3)
    pygame.draw.line(surface, (60,60,60), (body.centerx, body.bottom), (body.centerx- int(10*scale), body.bottom+ int(18*scale)), 3)
    pygame.draw.line(surface, (60,60,60), (body.centerx, body.bottom), (body.centerx+ int(10*scale), body.bottom+ int(18*scale)), 3)`}</CodeBlock>
      </Section>

      <Section title="–ö–ª–∞—Å—Å –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞ (–º–∞—à–∏–Ω–∞)">
        <CodeBlock language="python">{`class Car:
    def __init__(self, x: float, y: float, color=(80, 160, 240)) -> None:
        self.x = x; self.y = y
        self.color = color
        self.vx = 220.0
        self.w = 120; self.h = 50

    def update(self, dt: float, bounds: pygame.Rect) -> None:
        self.x += self.vx * dt
        if self.x + self.w > bounds.right:
            self.x = bounds.right - self.w; self.vx *= -1
        if self.x < bounds.left:
            self.x = bounds.left; self.vx *= -1

    def draw(self, surface: pygame.Surface) -> None:
        body = pygame.Rect(int(self.x), int(self.y), self.w, self.h)
        pygame.draw.rect(surface, self.color, body, 0, border_radius=10)
        cab = pygame.Rect(body.left + 12, body.top + 8, self.w//2, self.h//2)
        pygame.draw.rect(surface, (200, 230, 255), cab, 0, border_radius=8)
        pygame.draw.circle(surface, (20,20,20), (body.left + 24, body.bottom), 16, 0)
        pygame.draw.circle(surface, (20,20,20), (body.right - 24, body.bottom), 16, 0)
        pygame.draw.circle(surface, (220,220,220), (body.left + 24, body.bottom), 6, 0)
        pygame.draw.circle(surface, (220,220,220), (body.right - 24, body.bottom), 6, 0)`}</CodeBlock>
      </Section>

      <Section title="–°–ª–æ–∏: —Ñ–æ–Ω ‚Üí —Å—Ç–∞—Ç–∏–∫–∞ ‚Üí –¥–∏–Ω–∞–º–∏–∫–∞ ‚Üí UI">
        <CodeBlock language="python">{`def draw_scene_static(surface: pygame.Surface) -> None:
    pygame.draw.rect(surface, (34, 120, 70), (0, 520, 900, 80), 0) # –∑–µ–º–ª—è
    draw_house(surface, (80, 360), 1.0)
    draw_house(surface, (260, 380), 0.8)
    draw_tree(surface, (430, 400), 1.1)
    draw_tree(surface, (520, 420), 0.9)
    draw_person(surface, (360, 500), 1.2)`}</CodeBlock>
      </Section>

      <Section title="–°–æ–±—Ä–∞–Ω–Ω—ã–π –ø—Ä–∏–º–µ—Ä">
        <CodeBlock language="python">{`import pygame, sys
pygame.init()

screen_width, screen_height = 900, 600
screen_surface = pygame.display.set_mode((screen_width, screen_height))
pygame.display.set_caption('–ü—Ä–µ—Ñ–∞–±—ã ‚Äî –ø—Ä–∏–º–µ—Ä')
clock = pygame.time.Clock()

# ... —Ñ—É–Ω–∫—Ü–∏–∏ draw_house/draw_tree/draw_person –∏ –∫–ª–∞—Å—Å Car –∑–¥–µ—Å—å ...

car = Car(200, 470)

is_running = True
while is_running:
    dt = clock.tick(60) / 1000.0
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            is_running = False

    car.update(dt, pygame.Rect(0, 0, screen_width, screen_height))

    screen_surface.fill((28, 30, 36))
    # –æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ: —Å–µ—Ç–∫–∞
    for x in range(0, screen_width, 50):
        pygame.draw.line(screen_surface, (44,48,58), (x, 0), (x, screen_height), 1)
    for y in range(0, screen_height, 50):
        pygame.draw.line(screen_surface, (44,48,58), (0, y), (screen_width, y), 1)

    draw_scene_static(screen_surface)
    car.draw(screen_surface)

    pygame.display.flip()

pygame.quit()
sys.exit()`}</CodeBlock>
      </Section>

      <Section title="–ü—Ä–∞–∫—Ç–∏–∫–∞ ‚Äî –∑–∞–¥–∞–Ω–∏—è">
        <ol className="space-y-2">
          <li><strong>–ü–∞—Ä–∞–º–µ—Ç—Ä—ã:</strong> –¥–æ–±–∞–≤—å –≤ <code>draw_house</code> —Ü–≤–µ—Ç –∫—Ä—ã—à–∏ –∏ –æ–∫–Ω–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º–∏, –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –æ—Å—Ç–∞–≤—å —Ç–µ–∫—É—â–∏–µ.</li>
          <li><strong>–ù–æ–≤—ã–µ –ø—Ä–µ—Ñ–∞–±—ã:</strong> —Å–¥–µ–ª–∞–π <code>draw_cloud(surface, pos, scale)</code> (–Ω–µ—Å–∫–æ–ª—å–∫–æ –∫—Ä—É–≥–æ–≤) –∏ <code>draw_sun(...)</code>.</li>
          <li><strong>–ì—Ä—É–ø–ø–∞ –æ–±—ä–µ–∫—Ç–æ–≤:</strong> —Å–æ–∑–¥–∞–π —Å–ø–∏—Å–æ–∫ –∏–∑ 5 –º–∞—à–∏–Ω —Å —Ä–∞–∑–Ω—ã–º–∏ —Å–∫–æ—Ä–æ—Å—Ç—è–º–∏/—Ü–≤–µ—Ç–∞–º–∏, –æ–±–Ω–æ–≤–ª—è–π –∏ —Ä–∏—Å—É–π –∫–∞–∂–¥—É—é.</li>
          <li><strong>–ü–æ—Ä—è–¥–æ–∫:</strong> –ø–æ–ø—Ä–æ–±—É–π –ø–æ–º–µ–Ω—è—Ç—å –ø–æ—Ä—è–¥–æ–∫ —Å–ª–æ—ë–≤ –∏ –ø–æ—Å–º–æ—Ç—Ä–∏, –∫–∞–∫ —ç–ª–µ–º–µ–Ω—Ç—ã –ø–µ—Ä–µ–∫—Ä—ã–≤–∞—é—Ç –¥—Ä—É–≥ –¥—Ä—É–≥–∞.</li>
          <li><strong>–ö–æ–ª–ª–∏–∑–∏–∏ (–¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–æ):</strong> –ø—Ä–æ–≤–µ—Ä—å –ø–µ—Ä–µ—Å–µ—á–µ–Ω–∏–µ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∞ –º–∞—à–∏–Ω—ã —Å –¥–æ–º–æ–º (—á–µ—Ä–µ–∑ <code>Rect.colliderect</code>), —Å–º–µ–Ω—è–π —Ü–≤–µ—Ç –º–∞—à–∏–Ω—ã –ø—Ä–∏ —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏–∏.</li>
        </ol>
      </Section>

      <Section title="–ü–æ–¥—Å–∫–∞–∑–∫–∏ (—Ñ—Ä–∞–≥–º–µ–Ω—Ç—ã)">
        <CodeBlock language="python">{`# –¶–≤–µ—Ç–∞ –∫–∞–∫ –∞—Ä–≥—É–º–µ–Ω—Ç—ã
def draw_house(surface, pos, scale=1.0, roof_color=(160,80,60), win_color=(200,220,255)):
    # ... –∏—Å–ø–æ–ª—å–∑—É–µ–º roof_color –∏ win_color ...`}</CodeBlock>
        <CodeBlock language="python">{`# –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≥—Ä—É–ø–ø—ã –º–∞—à–∏–Ω
cars = [Car(100,470,(90,170,250)), Car(200,470,(250,120,120)), Car(300,470,(120,220,140))]
for c in cars:
    c.update(dt, bounds)
    c.draw(screen_surface)`}</CodeBlock>
        <CodeBlock language="python">{`# –°—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏–µ
if pygame.Rect(int(car.x), int(car.y), car.w, car.h).colliderect(pygame.Rect(80,360,120,80)):
    car.color = (250, 100, 80)`}</CodeBlock>
      </Section>

      <Section title="–ß–∞—Å—Ç—ã–µ –æ—à–∏–±–∫–∏">
        <ul>
          <li>–†–∏—Å–æ–≤–∞–Ω–∏–µ ¬´–≤—Ä–∞–∑–Ω–æ–±–æ–π¬ª: –Ω–∞—Ä—É—à–µ–Ω –ø–æ—Ä—è–¥–æ–∫ —Å–ª–æ—ë–≤, –æ–±—ä–µ–∫—Ç—ã –ø–µ—Ä–µ–∫—Ä—ã–≤–∞—é—Ç—Å—è –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ.</li>
          <li>–°–ª–∏—à–∫–æ–º –º–Ω–æ–≥–æ –¥—É–±–ª–∏—Ä–æ–≤–∞–Ω–∏—è –∫–æ–¥–∞ ‚Äî –∑–∞–±—ã–ª–∏ –≤—ã–Ω–µ—Å—Ç–∏ –≤ —Ñ—É–Ω–∫—Ü–∏–∏/–∫–ª–∞—Å—Å—ã.</li>
          <li>–ñ—ë—Å—Ç–∫–æ –∑–∞–±–∏—Ç—ã–µ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –±–µ–∑ <code>pos</code>/<code>scale</code> ‚Äî –ø—Ä–µ—Ñ–∞–± ¬´–Ω–µ–≥–∏–±–∫–∏–π¬ª.</li>
          <li>–ü–ª–∞–≤–∞—é—â–∏–µ –∑–Ω–∞—á–µ–Ω–∏—è –±–µ–∑ –æ–∫—Ä—É–≥–ª–µ–Ω–∏—è –ø—Ä–∏ —Ä–∏—Å–æ–≤–∞–Ω–∏–∏ ‚Äî ¬´–¥—Ä–æ–∂–∞—â–∏–µ¬ª –ø–∏–∫—Å–µ–ª–∏.</li>
        </ul>
      </Section>

      <Section title="–°–∫–∞—á–∞—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª—ã">
        <ul>
          <li>üì¶ –ó–∞–≥–æ—Ç–æ–≤–∫–∞ (starter): <a href="https://denchicka.github.io/pygame-course-site/downloads/starter/m07.zip">m07.zip</a></li>
          <li>üì¶ –ò—Ç–æ–≥ (final): <a href="https://denchicka.github.io/pygame-course-site/downloads/final/m07.zip">m07.zip</a></li>
        </ul>
      </Section>
    </div>
  )
}
