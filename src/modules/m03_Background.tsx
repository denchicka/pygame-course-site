import React from 'react'
import Section from '../components/Section'
import CodeBlock from '../components/CodeBlock'

export default function Module() {
  return (
    <div className="space-y-6">
      <Section title="–ó–∞–¥–∞—á–∞ –º–æ–¥—É–ª—è">
        <p>
          –ù–∞—Å—Ç—Ä–æ–∏—Ç—å —Ñ–æ–Ω–æ–≤—É—é –∑–∞–ª–∏–≤–∫—É —ç–∫—Ä–∞–Ω–∞ –∏ –ø–æ–Ω—è—Ç—å, –∑–∞—á–µ–º –Ω—É–∂–µ–Ω <code>pygame.display.flip()</code>.
          –î–æ–±–∞–≤–∏–º –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –ø–∞–ª–∏—Ç—Ä—ã –ø–æ –∫–ª–∞–≤–∏—à–µ, –≥—Ä–∞–¥–∏–µ–Ω—Ç –∏ —Å—Ä–∞–≤–Ω–∏–º <code>flip()</code> —Å <code>display.update()</code>.
        </p>
      </Section>

      <Section title="–ë–∞–∑–æ–≤—ã–π —Ü–∏–∫–ª: —Ñ–æ–Ω + flip()">
        <CodeBlock language="python">{`import pygame, sys
pygame.init()

screen_surface = pygame.display.set_mode((800, 600))
pygame.display.set_caption('–§–æ–Ω –∏ flip ‚Äî –±–∞–∑–æ–≤—ã–π –ø—Ä–∏–º–µ—Ä')

is_running: bool = True
background_color = (64, 128, 200)  # R, G, B (0..255)

while is_running:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            is_running = False

    # 1) –æ—á–∏—Å—Ç–∫–∞ —ç–∫—Ä–∞–Ω–∞ —Ü–≤–µ—Ç–æ–º
    screen_surface.fill(background_color)

    # 2) –ø–æ–∫–∞–∑–∞—Ç—å –∫–∞–¥—Ä
    pygame.display.flip()

pygame.quit()
sys.exit()`}</CodeBlock>
        <ul>
          <li><code>fill()</code> ‚Äî –∑–∞–∫—Ä–∞—Å–∫–∞ –≤—Å–µ–π –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏.</li>
          <li><code>flip()</code> ‚Äî –ø–æ–∫–∞–∑ –≥–æ—Ç–æ–≤–æ–≥–æ –∫–∞–¥—Ä–∞ (–¥–≤–æ–π–Ω–∞—è –±—É—Ñ–µ—Ä–∏–∑–∞—Ü–∏—è, –±–µ–∑ –º–µ—Ä—Ü–∞–Ω–∏—è).</li>
        </ul>
      </Section>

      <Section title="–ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ü–≤–µ—Ç–æ–≤ –ø–æ SPACE">
        <CodeBlock language="python">{`import pygame, sys
pygame.init()

screen_surface = pygame.display.set_mode((800, 600))
pygame.display.set_caption('SPACE ‚Äî —Å–º–µ–Ω–∞ —Ñ–æ–Ω–∞')

PALETTE = [
    (30, 30, 40),
    (64, 128, 200),
    (240, 240, 255),
    (255, 245, 235),
]

index: int = 0
background_color = PALETTE[index]
is_running: bool = True

while is_running:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            is_running = False
        if event.type == pygame.KEYDOWN and event.key == pygame.K_SPACE:
            index = (index + 1) % len(PALETTE)
            background_color = PALETTE[index]

    screen_surface.fill(background_color)
    pygame.display.flip()

pygame.quit()
sys.exit()`}</CodeBlock>
      </Section>

      <Section title="–í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–π –≥—Ä–∞–¥–∏–µ–Ω—Ç (–±–µ–∑ –∫–∞—Ä—Ç–∏–Ω–æ–∫)">
        <CodeBlock language="python">{`import pygame, sys
pygame.init()

screen_width, screen_height = 800, 600
screen_surface = pygame.display.set_mode((screen_width, screen_height))
pygame.display.set_caption('–í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–π –≥—Ä–∞–¥–∏–µ–Ω—Ç')

def draw_vertical_gradient(surface: pygame.Surface, top_color, bottom_color):
    height = surface.get_height()
    width = surface.get_width()
    for y in range(height):
        t = y / max(1, height - 1)  # 0..1
        r = int(top_color[0] * (1 - t) + bottom_color[0] * t)
        g = int(top_color[1] * (1 - t) + bottom_color[1] * t)
        b = int(top_color[2] * (1 - t) + bottom_color[2] * t)
        pygame.draw.line(surface, (r, g, b), (0, y), (width, y))

is_running: bool = True
top = (64, 128, 200)
bottom = (240, 240, 255)

while is_running:
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            is_running = False

    draw_vertical_gradient(screen_surface, top, bottom)
    pygame.display.flip()

pygame.quit()
sys.exit()`}</CodeBlock>
        <p className="text-sm text-gray-500">
          –î–ª—è —É—á–µ–±–Ω—ã—Ö –ø—Ä–æ–µ–∫—Ç–æ–≤ –æ—Ç—Ä–∏—Å–æ–≤–∫–∞ –≥—Ä–∞–¥–∏–µ–Ω—Ç–∞ –ª–∏–Ω–∏—è–º–∏ ‚Äî –Ω–æ—Ä–º. –î–ª—è –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–π –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –∏—Å–ø–æ–ª—å–∑—É—é—Ç –º–∞—Å—Å–∏–≤—ã/Surface.lock.
        </p>
      </Section>

      <Section title="flip() vs display.update()">
        <p>
          <code>flip()</code> –æ–±–Ω–æ–≤–ª—è–µ—Ç –≤–µ—Å—å —ç–∫—Ä–∞–Ω. <code>display.update(rect)</code> ‚Äî —Ç–æ–ª—å–∫–æ –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫ (–ø–æ–ª–µ–∑–Ω–æ –¥–ª—è —á–∞—Å—Ç–∏—á–Ω—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π).
        </p>
        <CodeBlock language="python">{`# –ü—Ä–∏–º–µ—Ä —á–∞—Å—Ç–∏—á–Ω–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
pygame.draw.rect(screen_surface, (255, 180, 0), (40, 40, 160, 100))
pygame.display.update(pygame.Rect(40, 40, 160, 100))`}</CodeBlock>
      </Section>

      <Section title="–ü—Ä–∞–∫—Ç–∏–∫–∞ ‚Äî –∑–∞–¥–∞–Ω–∏—è">
        <ol className="space-y-2">
          <li><strong>–ü–∞–ª–∏—Ç—Ä–∞:</strong> –¥–æ–±–∞–≤—å –µ—â—ë 2‚Äì3 —Ü–≤–µ—Ç–∞ –∏ –ø–µ—Ä–µ–∫–ª—é—á–∞–π –ø–æ <kbd>SPACE</kbd>.</li>
          <li><strong>–ì—Ä–∞–¥–∏–µ–Ω—Ç-—Ä–µ–∂–∏–º:</strong> —Å–¥–µ–ª–∞–π –ø–µ—Ä–µ–∫–ª—é—á–∞—Ç–µ–ª—å <kbd>G</kbd>: –æ–¥–Ω–æ—Ç–æ–Ω–Ω—ã–π —Ñ–æ–Ω ‚áÑ –≥—Ä–∞–¥–∏–µ–Ω—Ç.</li>
          <li><strong>–ê–Ω–∏–º–∞—Ü–∏—è –≥—Ä–∞–¥–∏–µ–Ω—Ç–∞:</strong> —Å–ª–µ–≥–∫–∞ –º–µ–Ω—è–π –Ω–∏–∂–Ω–∏–π —Ü–≤–µ—Ç –ø–æ –≤—Ä–µ–º–µ–Ω–∏ (—ç—Ñ—Ñ–µ–∫—Ç ¬´–¥—ã—à–∏—Ç¬ª).</li>
          <li><strong>–ö–æ–º–±–æ:</strong> –Ω–∞ —Ñ–æ–Ω–µ –Ω–∞—Ä–∏—Å—É–π –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫ –∏ –æ–∫—Ä—É–∂–Ω–æ—Å—Ç—å, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å —Å–ª–æ–∏.</li>
        </ol>
      </Section>

      <Section title="–ü–æ–¥—Å–∫–∞–∑–∫–∏ (—Ñ—Ä–∞–≥–º–µ–Ω—Ç—ã)">
        <CodeBlock language="python">{`# –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ü–≤–µ—Ç–∞
if event.type == pygame.KEYDOWN and event.key == pygame.K_SPACE:
    index = (index + 1) % len(PALETTE)
    background_color = PALETTE[index]`}</CodeBlock>
        <CodeBlock language="python">{`# –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ —Ä–µ–∂–∏–º–∞ –≥—Ä–∞–¥–∏–µ–Ω—Ç–∞
if event.type == pygame.KEYDOWN and event.key == pygame.K_g:
    use_gradient = not use_gradient`}</CodeBlock>
        <CodeBlock language="python">{`# –ê–Ω–∏–º–∞—Ü–∏—è –Ω–∏–∂–Ω–µ–≥–æ —Ü–≤–µ—Ç–∞ (–ø–æ –≤—Ä–µ–º–µ–Ω–∏)
gradient_offset = (gradient_offset + int(120 * dt)) % 255
bottom = ((top[0] + gradient_offset) % 256,
          (top[1] + 2*gradient_offset) % 256,
          (top[2] + 3*gradient_offset) % 256)`}</CodeBlock>
      </Section>

      <Section title="–ì–æ—Ç–æ–≤—ã–π –ø—Ä–∏–º–µ—Ä: —Ñ–æ–Ω, –≥—Ä–∞–¥–∏–µ–Ω—Ç –∏ –æ—Ä–∏–µ–Ω—Ç–∏—Ä—ã">
        <CodeBlock language="python">{`import pygame, sys
pygame.init()

screen_width: int = 800
screen_height: int = 600
screen_surface = pygame.display.set_mode((screen_width, screen_height))
pygame.display.set_caption('–§–æ–Ω: —Ü–≤–µ—Ç / –≥—Ä–∞–¥–∏–µ–Ω—Ç / –æ—Ä–∏–µ–Ω—Ç–∏—Ä—ã')

PALETTE = [(30,30,40),(64,128,200),(240,240,255),(255,245,235)]
idx: int = 0
background_color = PALETTE[idx]

use_gradient: bool = False
gradient_offset: int = 0
clock_for_fps_control = pygame.time.Clock()

def draw_vertical_gradient(surface: pygame.Surface, top_color, bottom_color):
    h = surface.get_height(); w = surface.get_width()
    for y in range(h):
        t = y / max(1, h - 1)
        r = int(top_color[0]*(1-t) + bottom_color[0]*t)
        g = int(top_color[1]*(1-t) + bottom_color[1]*t)
        b = int(top_color[2]*(1-t) + bottom_color[2]*t)
        pygame.draw.line(surface, (r,g,b), (0,y), (w,y))

is_running: bool = True
while is_running:
    dt: float = clock_for_fps_control.tick(60) / 1000.0

    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            is_running = False
        if event.type == pygame.KEYDOWN:
            if event.key == pygame.K_SPACE:
                idx = (idx + 1) % len(PALETTE)
                background_color = PALETTE[idx]
            if event.key == pygame.K_g:
                use_gradient = not use_gradient

    if not use_gradient:
        screen_surface.fill(background_color)
    else:
        gradient_offset = (gradient_offset + int(120 * dt)) % 255
        bottom = ((background_color[0] + gradient_offset) % 256,
                  (background_color[1] + 2*gradient_offset) % 256,
                  (background_color[2] + 3*gradient_offset) % 256)
        draw_vertical_gradient(screen_surface, background_color, bottom)

    # –æ—Ä–∏–µ–Ω—Ç–∏—Ä—ã –ø–æ–≤–µ—Ä—Ö —Ñ–æ–Ω–∞
    pygame.draw.rect(screen_surface, (255,180,0), (40,40,160,100), 3)
    pygame.draw.circle(screen_surface, (0,200,255), (400,300), 40, 4)

    pygame.display.flip()

pygame.quit()
sys.exit()`}</CodeBlock>
      </Section>

      <Section title="–ß–∞—Å—Ç—ã–µ –æ—à–∏–±–∫–∏">
        <ul>
          <li>–ù–µ—Ç <code>pygame.display.flip()</code> ‚Äî –∏–∑–º–µ–Ω–µ–Ω–∏—è –Ω–µ –≤–∏–¥–Ω—ã.</li>
          <li>–í—ã–∑–æ–≤ <code>flip()</code> –ø–æ—Å—Ç–∞–≤–ª–µ–Ω –¥–æ —Ä–∏—Å–æ–≤–∞–Ω–∏—è ‚Äî –∫–∞–¥—Ä ¬´–ø—É—Å—Ç–æ–π¬ª.</li>
          <li>–¶–≤–µ—Ç —É–∫–∞–∑–∞–Ω –Ω–µ –≤ –¥–∏–∞–ø–∞–∑–æ–Ω–µ 0..255.</li>
          <li>–ì—Ä–∞–¥–∏–µ–Ω—Ç —Ä–∏—Å—É–µ—Ç—Å—è –æ–¥–∏–Ω —Ä–∞–∑ –≤–Ω–µ —Ü–∏–∫–ª–∞ ‚Äî –∫–∞–¥—Ä –Ω–µ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è.</li>
        </ul>
      </Section>

      <Section title="–°–∫–∞—á–∞—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª—ã">
        <ul>
          <li>üì¶ –ó–∞–≥–æ—Ç–æ–≤–∫–∞ (starter): <a href="https://denchicka.github.io/pygame-course-site/downloads/starter/m03.zip">m03.zip</a></li>
          <li>üì¶ –ò—Ç–æ–≥ (final): <a href="https://denchicka.github.io/pygame-course-site/downloads/final/m03.zip">m03.zip</a></li>
        </ul>
      </Section>
    </div>
  )
}
