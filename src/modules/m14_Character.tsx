import React from 'react'
import Section from '../components/Section'
import CodeBlock from '../components/CodeBlock'

export default function Module() {
  return (
    <div className="space-y-6">
      <Section title="–ó–∞–¥–∞—á–∞ –º–æ–¥—É–ª—è">
        <p>
          –î–≤–∏–∂–µ–Ω–∏–µ –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –Ω–∞ –∫–∞—Ä—Ç–∏–Ω–∫–∞—Ö: —Ö–æ–¥—å–±–∞ –≤–ª–µ–≤–æ/–≤–ø—Ä–∞–≤–æ, —Ä–∞–∑–≤–æ—Ä–æ—Ç —Å–ø—Ä–∞–π—Ç–∞, –ø—Ä—ã–∂–æ–∫ —Å –≥—Ä–∞–≤–∏—Ç–∞—Ü–∏–µ–π,
          –∞–Ω–∏–º–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏–π (<code>idle</code>/<code>run</code>/<code>jump</code>), –±–∞–∑–æ–≤—ã–µ –∫–æ–ª–ª–∏–∑–∏–∏ —Å –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞–º–∏.
        </p>
      </Section>

      <Section title="–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –∞—Å—Å–µ—Ç–æ–≤ (—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è)">
        <CodeBlock language="text">{`assets/
  bg.png
  character/
    idle_1.png  idle_2.png
    run_1.png   run_2.png   run_3.png   run_4.png
    jump.png`}</CodeBlock>
        <p className="text-sm text-gray-500">
          –ï—Å–ª–∏ —Ñ–∞–π–ª–æ–≤ –Ω–µ—Ç ‚Äî –≤ –ø—Ä–∏–º–µ—Ä–∞—Ö –µ—Å—Ç—å ¬´–∑–∞–≥–ª—É—à–∫–∏¬ª, —á—Ç–æ–±—ã –º–æ–∂–Ω–æ –±—ã–ª–æ –∑–∞–ø—É—Å—Ç–∏—Ç—å –±–µ–∑ –∞—Å—Å–µ—Ç–æ–≤.
        </p>
      </Section>

      <Section title="–ë–∞–∑–∞: –∑–∞–≥—Ä—É–∑–∫–∞ –∫–∞–¥—Ä–æ–≤ –∏ –≤—ã–±–æ—Ä –ø–æ —Å–æ—Å—Ç–æ—è–Ω–∏—é">
        <CodeBlock language="python">{`def load_frames(folder: str, names: list[str], fallback=(64,64)) -> list[pygame.Surface]:
    frames = []
    for n in names:
        try:
            frames.append(pygame.image.load(os.path.join(folder, n)).convert_alpha())
        except:
            s = pygame.Surface(fallback, pygame.SRCALPHA)
            s.fill((120,170,250)); pygame.draw.rect(s, (240,240,240), s.get_rect(), 2)
            frames.append(s)
    return frames

idle_frames = load_frames('assets/character', ['idle_1.png', 'idle_2.png'])
run_frames  = load_frames('assets/character', ['run_1.png','run_2.png','run_3.png','run_4.png'])
jump_frame  = pygame.image.load('assets/character/jump.png').convert_alpha()  # –∏–ª–∏ –∑–∞–≥–ª—É—à–∫–∞`}</CodeBlock>
      </Section>

      <Section title="–ü–æ–∑–∏—Ü–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ: midbottom –∏ —Ä–∞–∑–≤–æ—Ä–æ—Ç –ø–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—é">
        <CodeBlock language="python">{`# pos ‚Äî –≤–µ–∫—Ç–æ—Ä "–ø—è—Ç–æ–∫" (midbottom)
frame = current_surface()
if facing < 0:
    frame = pygame.transform.flip(frame, True, False)
rect = frame.get_rect(midbottom=(int(pos.x), int(pos.y)))
screen_surface.blit(frame, rect)`}</CodeBlock>
        <p className="text-sm text-gray-500">
          –ü—Ä–∏–≤—è–∑–∫–∞ –∫ <code>midbottom</code> —É–¥–æ–±–Ω–∞: ¬´–Ω–æ–≥–∏ —Å—Ç–æ—è—Ç –Ω–∞ –∑–µ–º–ª–µ¬ª, –∏ —Ä–æ—Å—Ç –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ –Ω–µ –≤–ª–∏—è–µ—Ç –Ω–∞ —É—Ä–æ–≤–µ–Ω—å –ø–æ–ª–∞.
        </p>
      </Section>

      <Section title="–§–∏–∑–∏–∫–∞: —Ö–æ–¥—å–±–∞, –ø—Ä—ã–∂–æ–∫, –≥—Ä–∞–≤–∏—Ç–∞—Ü–∏—è">
        <CodeBlock language="python">{`GRAVITY = 1800.0
MOVE_SPEED = 320.0
JUMP_SPEED = 700.0
GROUND_Y = 520

vel = pygame.Vector2(0, 0)
pos = pygame.Vector2(W//2, GROUND_Y)
on_ground = True

keys = pygame.key.get_pressed()
dirx = (1 if keys[pygame.K_d] or keys[pygame.K_RIGHT] else 0) - (1 if keys[pygame.K_a] or keys[pygame.K_LEFT] else 0)
vel.x = dirx * MOVE_SPEED
if dirx != 0: facing = 1 if dirx > 0 else -1

if (keys[pygame.K_SPACE] or keys[pygame.K_w] or keys[pygame.K_UP]) and on_ground:
    vel.y = -JUMP_SPEED; on_ground = False

vel.y += GRAVITY * dt
pos += vel * dt

if pos.y > GROUND_Y:  # ¬´–∑–µ–º–ª—è¬ª
    pos.y = GROUND_Y; vel.y = 0; on_ground = True`}</CodeBlock>
      </Section>

      <Section title="–ê–Ω–∏–º–∞—Ü–∏–æ–Ω–Ω—ã–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è">
        <CodeBlock language="python">{`if not on_ground:
    state = 'jump'
elif abs(vel.x) > 1:
    state = 'run'
else:
    state = 'idle'

# –¢–∞–π–º–∏–Ω–≥–∏
FRAME_IDLE = 0.5
FRAME_RUN  = 0.1
frame_time += dt
if state == 'run' and frame_time >= FRAME_RUN:
    frame_time -= FRAME_RUN; frame_index = (frame_index + 1) % len(run_frames)
elif state == 'idle' and frame_time >= FRAME_IDLE:
    frame_time -= FRAME_IDLE; frame_index = (frame_index + 1) % len(idle_frames)`}</CodeBlock>
      </Section>

      <Section title="–°–æ–±—Ä–∞–Ω–Ω—ã–π –ø—Ä–∏–º–µ—Ä (walking + jump)">
        <CodeBlock language="python">{`# –ü–æ–ª–Ω—ã–π runnable-–ø—Ä–∏–º–µ—Ä —Å–º. –≤ —Ñ–∏–Ω–∞–ª—å–Ω–æ–º –∞—Ä—Ö–∏–≤–µ.
# –ö–ª—é—á–µ–≤—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã: –∑–∞–≥—Ä—É–∑–∫–∞ –∫–∞–¥—Ä–æ–≤, midbottom-–≤—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ, flip –ø–æ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—é,
# —Ñ–∏–∑–∏–∫–∞ (—Å–∫–æ—Ä–æ—Å—Ç–∏, –≥—Ä–∞–≤–∏—Ç–∞—Ü–∏—è) –∏ –ø—Ä–æ—Å—Ç–æ–π –≤—ã–±–æ—Ä –∫–∞–¥—Ä–∞ –ø–æ —Å–æ—Å—Ç–æ—è–Ω–∏—é.`}</CodeBlock>
      </Section>

      <Section title="–ü–ª–∞—Ç—Ñ–æ—Ä–º—ã –∏ –∫–æ–ª–ª–∏–∑–∏–∏ (Rect)">
        <CodeBlock language="python">{`platforms = [pygame.Rect(100,460,200,20), pygame.Rect(420,400,160,20), pygame.Rect(640,500,180,20)]

# –î–µ—Ç–µ–∫—Ü–∏—è —á–µ—Ä–µ–∑ Rect —Ç–µ–∫—É—â–µ–≥–æ –∫–∞–¥—Ä–∞:
rect = current_surface().get_rect(midbottom=(int(pos.x), int(pos.y)))
# –°–Ω–∞—á–∞–ª–∞ –¥–≤–∏–≥–∞–µ–º –ø–æ X –∏ –ø—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–æ–ª–∫–Ω–æ–≤–µ–Ω–∏—è, –∑–∞—Ç–µ–º –ø–æ Y ‚Äî –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π –ø–æ—Ä—è–¥–æ–∫.`}</CodeBlock>
      </Section>

      <Section title="–ü—Ä–∞–∫—Ç–∏–∫–∞ ‚Äî –∑–∞–¥–∞–Ω–∏—è">
        <ol className="space-y-2">
          <li><strong>–î–≤–æ–π–Ω–æ–π –ø—Ä—ã–∂–æ–∫:</strong> —Ä–∞–∑—Ä–µ—à–∏—Ç—å –≤—Ç–æ—Ä–æ–π –ø—Ä—ã–∂–æ–∫ –≤ –≤–æ–∑–¥—É—Ö–µ (—Å—á—ë—Ç—á–∏–∫ –ø—Ä—ã–∂–∫–æ–≤).</li>
          <li><strong>–ö–æ—Ä–æ—Ç–∫–∏–π/–¥–ª–∏–Ω–Ω—ã–π –ø—Ä—ã–∂–æ–∫:</strong> –ø—Ä–∏ –æ—Ç–ø—É—Å–∫–∞–Ω–∏–∏ –ø—Ä–æ–±–µ–ª–∞ —Ä–∞–Ω—å—à–µ ‚Äî —É–º–µ–Ω—å—à–∞—Ç—å –≤–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—É—é —Å–∫–æ—Ä–æ—Å—Ç—å.</li>
          <li><strong>–ê—Ç–∞–∫–∞:</strong> –¥–æ–±–∞–≤–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ <code>attack</code> –∏ –æ—Ç–¥–µ–ª—å–Ω—ã–µ –∫–∞–¥—Ä—ã (–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –Ω–∞ –≤—Ä–µ–º—è –∞–Ω–∏–º–∞—Ü–∏–∏).</li>
          <li><strong>–õ–µ—Å—Ç–Ω–∏—Ü—ã/—Ç—Ä–∞–º–ø–ª–∏–Ω:</strong> –ø—Ä—è–º–æ—É–≥–æ–ª—å–Ω–∏–∫–∏ –æ—Å–æ–±–æ–≥–æ —Ç–∏–ø–∞: –Ω–∞ –ª–µ—Å—Ç–Ω–∏—Ü–µ –æ—Ç–∫–ª—é—á–∞—Ç—å –≥—Ä–∞–≤–∏—Ç–∞—Ü–∏—é; –Ω–∞ –ø—Ä—É–∂–∏–Ω–µ ‚Äî –∑–∞–¥–∞–≤–∞—Ç—å –∏–º–ø—É–ª—å—Å –≤–≤–µ—Ä—Ö.</li>
          <li><strong>–•–∏—Ç–±–æ–∫—Å vs. –≤–∏–¥–∏–º–∞—è –æ–±–ª–∞—Å—Ç—å:</strong> –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –æ—Ç–¥–µ–ª—å–Ω—ã–π <code>Rect</code> –¥–ª—è –∫–æ–ª–ª–∏–∑–∏–π (—É–∂–µ –±–µ–∑ ¬´–ø—É—à–∏—Å—Ç—ã—Ö¬ª –≤–æ–ª–æ—Å –∏ —Ç.–ø.).</li>
        </ol>
      </Section>

      <Section title="–ü–æ–¥—Å–∫–∞–∑–∫–∏ (—Ñ—Ä–∞–≥–º–µ–Ω—Ç—ã)">
        <CodeBlock language="python">{`# –î–≤–æ–π–Ω–æ–π –ø—Ä—ã–∂–æ–∫
max_jumps = 2; jumps_left = 2
if key_space_pressed and jumps_left > 0:
    vel.y = -JUMP_SPEED; jumps_left -= 1
if on_ground: jumps_left = max_jumps`}</CodeBlock>
        <CodeBlock language="python">{`# –ö–æ—Ä–æ—Ç–∫–∏–π –ø—Ä—ã–∂–æ–∫ (variable jump height)
if event.type == pygame.KEYUP and event.key == pygame.K_SPACE and vel.y < -200:
    vel.y = -200`}</CodeBlock>
        <CodeBlock language="python">{`# –û—Ç–¥–µ–ª—å–Ω—ã–π —Ö–∏—Ç–±–æ–∫—Å
hitbox = pygame.Rect(0,0, rect.w*0.6, rect.h*0.9); hitbox.center = rect.center`}</CodeBlock>
      </Section>

      <Section title="–ß–∞—Å—Ç—ã–µ –æ—à–∏–±–∫–∏">
        <ul>
          <li>–ü—Ä–∏–≤—è–∑–∫–∞ –ø–æ –ª–µ–≤–æ–º—É –≤–µ—Ä—Ö–Ω–µ–º—É —É–≥–ª—É: –ø—Ä–∏ —Å–º–µ–Ω–µ –∫–∞–¥—Ä–∞ –ø–µ—Ä—Å–æ–Ω–∞–∂ ¬´–ø–æ–¥—Å–∫–∞–∫–∏–≤–∞–µ—Ç¬ª. –ü—Ä–∏–≤—è–∑—ã–≤–∞–π –ø–æ <code>midbottom</code>.</li>
          <li>–ü–æ–≤–æ—Ä–æ—Ç —É–∂–µ –ø–æ–≤–µ—Ä–Ω—É—Ç–æ–≥–æ –∫–∞–¥—Ä–∞: –∞—Ä—Ç–µ—Ñ–∞–∫—Ç—ã –∏ –º—ã–ª–æ. –í—Å–µ–≥–¥–∞ –æ—Ç—Ä–∞–∂–∞–π –∏—Å—Ö–æ–¥–Ω—ã–π –∫–∞–¥—Ä.</li>
          <li>–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –ø–æ—Ä—è–¥–æ–∫ –∫–æ–ª–ª–∏–∑–∏–π: —Å–º–µ—à–∏–≤–∞–Ω–∏–µ X/Y –ø—Ä–∏–≤–æ–¥–∏—Ç –∫ ¬´–∑–∞–ª–∏–ø–∞–Ω–∏—é¬ª –≤ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞—Ö.</li>
        </ul>
      </Section>

      <Section title="–°–∫–∞—á–∞—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª—ã">
        <ul>
          <li>üì¶ –ó–∞–≥–æ—Ç–æ–≤–∫–∞ (starter): <a href="https://denchicka.github.io/pygame-course-site/downloads/starter/m14.zip">m14.zip</a></li>
          <li>üì¶ –ò—Ç–æ–≥ (final): <a href="https://denchicka.github.io/pygame-course-site/downloads/final/m14.zip">m14.zip</a></li>
        </ul>
      </Section>
    </div>
  )
}
